name: mac
description: template used to build for mac

inputs:
  lipo-arch:
    required: true
    type: string
  rust-arch:
    required: true
    type: string

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      shell: bash
      run: brew install libsoxr pkg-config

    - name: Install nightly toolchain
      shell: bash
      run: rustup toolchain install nightly-${{ inputs.rust-arch }}-apple-darwin --component rust-src

    - name: Cache rust dependencies
      uses: actions/cache@v4
      env:
        CARGO_HOME: ~/.cargo
        cache-name: cache-rust-dependencies
      with:
        path: |
          ${{ env.CARGO_HOME }}/.crates.toml
          ${{ env.CARGO_HOME }}/.crates2.json
          ${{ env.CARGO_HOME }}/bin
          ${{ env.CARGO_HOME }}/registry/index
          ${{ env.CARGO_HOME }}/registry/cache
          ${{ env.CARGO_HOME }}/git/db
        key: ${{ runner.os }}-${{ inputs.rust-arch }}-build-${{ env.cache-name }}-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ inputs.rust-arch }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-${{ inputs.rust-arch }}-build-
          ${{ runner.os }}-${{ inputs.rust-arch }}-

    - name: Build
      shell: bash
      run: ./build.sh --nightly --build
      working-directory: ./c-second-music-system

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: csms-mac-${{ inputs.lipo-arch }}-release
        if-no-files-found: error
        path: ./target/${{ inputs.rust-arch }}-apple-darwin/release/libc_second_music_system.a
